<template>
	<view class="container prohibition">
		<view class="demo" :style="'height:' +  demo.height + 'px;' + 'padding-top:' + demo.top + 'px;padding-bottom:10rpx'">
			<view class="top_title">订单</view>
		</view>
		<view class="pd_t123">
			<!-- 判断是否授权 -->
			<view :class="[checkSHide ? 'show' : 'hide' ]">
				<image class="auth-img" src="https://test134.vrapp.chot.cn/mini/picture/auto_imgorder.jpg"></image>
				<view class="auth_text">由于您没有授权本页面无法展示</view>
				<view class="auth_text">更多信息为了您更好的用户体验，请授权登录</view>
				<view class="form_btn">
					<button class='testbutton' open-type="getUserInfo" @getuserinfo="getUserinfo" withCredentials="true">登录</button>
				</view>

			</view>
			<view :class="[checkSShow ? 'show' : 'hide' ]">
				<view class="box_fixed" :style="{ top: top_val + 'rpx'}">
					<!-- 切换 -->
					<view class="content_change">
						<view class="operate_box">
							<button class="operate_btn" v-for="(item,index) in btn_Arr" :key="index" :class="{'active':add_class==index}"
							 @tap="changeFn(index)">{{item.title}}</button>
						</view>
					</view>
					<!-- 顶部导航栏 -->
					<view class="horizonal-tab">
						<block v-for="(item,index) in tabBars" :key="index">
							<view class="scroll-tab-item" :class="{'active': tabIndex==index}" @tap="toggleTab(index)">
								{{item.name}}
								<view class="scroll-tab-line"></view>
							</view>
						</block>
					</view>
				</view>

				<!-- 内容区 -->
				<view class="">
					<!-- 滑块视图 -->
					<view class="content" :style="{ 'padding-top': margin_top + 'rpx'}">
						<view class="items">
							<view class="order_img">
								<image src="https://test134.vrapp.chot.cn/mini/picture/list_none.png" mode="widthFix" :class="[isEmpty?'show':'hide']"></image>
							</view>
							<view class="item" v-for="(items,index1) in queryList" :key="index1" @tap="detail_all(index1)">
								<view>订单号：<text>{{items.order_no}}</text><text class="item_title">{{ items.goods_title }}</text></view>
								<view class="orderid">
									<view class="title">
										被护理人：<text>{{items.name}}</text>
										<!-- //已支付 -->
										<view class="btn" :class="[ items.status=='待护理'&& orderShow ? 'show' : 'hide' ]"><button class="btn_pj"
											 @tap.stop="confirmTap(index1)">确认护理</button></view>
									</view>

									<image class="sucessImg" src="https://test134.vrapp.chot.cn/mini/picture/135_57.png" mode="widthFix"></image>
									<text class="statusText">{{items.status}}</text>
								</view>

								<view class="info">
									<view v-for="(item1,index2) in items.nurse" :key="index2">
										<view class="uni-flex work_item">
											<text class="item_name font_item">护工：<text class="major_text">{{ item1.name }}</text></text>
											<text class="item_name font_item">年龄：<text class="age">{{ item1.age }}岁</text></text>
										</view>
										<view class="uni-flex work_item">
											<view class="font_item" @click.stop="callPhone(index1)">电话：<text class="major_text phone">{{ item1.tel }}</text>
												<image class="phone_img" src="https://test134.vrapp.chot.cn/mini/picture/phone.png" />
											</view>
										</view>
										<view class="uni-flex work_item">
											<text class="font_item introduce">护工简介：<text class="sub_text">{{ item1.introduce }}</text></text>
										</view>
									</view>
								</view>
								<view class="pay_btn" v-show="items.status =='待支付'&&items.mid==mid">
									<button class="payNow" @click.stop="pay_order(index1)" hover-class="active">立即支付</button>
								</view>
								<view class="pay_btn" v-show="items.status == '已完成'">
									<button class="payNow" hover-class="active" @tap="buyAgin(index1)">再次购买</button>
								</view>
								<view class="pay_btn" v-show="items.status == '待护理' || items.status == '正在护理' ">
									<button class="payNow" hover-class="active" @tap="renewal(index1)">点击续费</button>
								</view>
							</view>


						</view>
					</view>
					<uni-load-more :status="status" :content-text="contentText" />
				</view>
			</view>
		</view>
	</view>
</template>

<script>
	import app from "../../App.vue"
	import uniLoadMore from '../../components/uni-load-more/uni-load-more.vue';
	const mid = uni.getStorageSync('mid');
	export default {
		components: {
			uniLoadMore
		},
		data() {
			return {
				tabIndex: 0,
				/* 选中标签栏的序列,默认显示第一个 */
				page: 1,
				pageSize: 10,
				list_count: 0,
				add_class: 0, // 默认显示预约订单信息
				orderShow: false,
				checkSHide: false,
				checkSShow: false,
				status: 'loading',
				isEmpty: false,
				contentText: {
					contentdown: '上拉加载更多',
					contentrefresh: '加载中.....',
					contentnomore: '没有更多数据啦'
				},
				btn_Arr: [{
						title: "预约订单"
					},
					{
						title: "商品订单"
					}
				],
				tabBars: [{
						name: '全部订单',
						id: 'all'
					}, {
						name: '待护理',
						id: 'nursing'
					}, {
						name: '正在护理',
						id: 'nursing'
					},
					{
						name: '已完成',
						id: 'finshed'
					}

				],
				demo: {
					top: 0,
					height: 0
				},
				data: {},
				queryList: [],
				order_no: "",
				token: "",
				statusText: '',
				nurse_id: null,
				top_val: 0, //top值
				margin_top: 0,
				mid: ''

			}
		},
		created() {
			const demo = uni.getMenuButtonBoundingClientRect()
			this.demo.top = demo.top
			this.demo.height = demo.height
			this.token = uni.getStorageSync('token');
		},
		onReachBottom(e) {
			this.page++;
			if (this.status != "more") {
				return false;
			}
			if (this.tabIndex == 0) {
				var status = "";
				this.statusText = "全部";
				this.getNurseList(status);

			} else if (this.tabIndex == 1) {
				var status = 3;
				this.statusText = "待护理";
				this.getNurseList(status);

			} else if (this.tabIndex == 2) {
				var status = 4;
				this.statusText = "正在护理";
				this.getNurseList(status);
			} else if (this.tabIndex == 3) {
				var status = 5; // 预约成功
				this.statusText = "已完成";
				this.getNurseList(status);
			}

		},
		onShow() {
			this.tabIndex = 0;
			this.add_class = 0;
			this.page = 1;
			console.log('onshow',this.queryList);
		},
		onLoad() {
			console.log('onload',this.queryList);
			var _this = this;
			uni.checkSession({
				success() {
					console.log('ok');

					app.wxLogin().then(res => {
						_this.token = app.globalData.token;
						_this.mid = uni.getStorageSync('mid');
						_this.checkSHide = false;
						_this.checkSShow = true;
						// session_key 未过期，并且在本生命周期一直有效
						//获取用户角色																					
						_this.roleAPI();
						// var status = app.globalData.orderStatus;
						var status = '';
						_this.getNurseList(status);
						console.log(222,_this.queryList);
						let mobile_phone = uni.getSystemInfoSync(); // 手机信息
						if (mobile_phone.windowWidth <= 320) { //、 iphone5
							_this.top_val = (_this.demo.height + _this.demo.top) * 2 + 13;
							_this.margin_top = (_this.demo.height + _this.demo.top) * 3;
						} else if (mobile_phone.safeArea.bottom >= 812) { // iphone XR
							_this.top_val = (_this.demo.height + _this.demo.top) * 2 - 6;
							_this.margin_top = (_this.demo.height + _this.demo.top) * 3;
						} else {
							_this.top_val = (_this.demo.height + _this.demo.top) * 2;
							_this.margin_top = (_this.demo.height + _this.demo.top) * 3;
						}
					})

				},
				fail() {
					// session_key 已经失效，需要重新执行登录流程
					//wx.login() // 重新登录
					console.log('expire');
					//app.wxLogin().then(res => {
					//_this.token = app.globalData.token;
					_this.checkSHide = true;
					_this.checkSShow = false;
					//})
				}
			})



		},
		methods: {
			// 获取微信用户信息
			getUserinfo: function() {
				var that = this;
				uni.getUserInfo({
					success: function(res) {
						var userInfo = res.userInfo
						that.nickName = userInfo.nickName //昵称
						that.avatarUrl = userInfo.avatarUrl //头像
						var gender = userInfo.gender //性别 0：未知、1：男、2：女
						var province = userInfo.province
						var city = userInfo.city
						var country = userInfo.country

						app.wxLogin().then(res => {
							let mobile_phone = uni.getSystemInfoSync(); // 手机信息
							if (mobile_phone.windowWidth <= 320) { //、 iphone5
								that.top_val = (that.demo.height + that.demo.top) * 2 + 13;
								that.margin_top = (that.demo.height + that.demo.top) * 3;
							} else if (mobile_phone.safeArea.bottom >= 812) { // iphone XR
								that.top_val = (that.demo.height + that.demo.top) * 2 - 6;
								that.margin_top = (that.demo.height + that.demo.top) * 3;
							} else {
								that.top_val = (that.demo.height + that.demo.top) * 2;
								that.margin_top = (that.demo.height + that.demo.top) * 3;
							}
							that.token = app.globalData.token;
							that.mid = uni.getStorageSync('mid');
							that.checkSHide = false;
							that.checkSShow = true;
							// session_key 未过期，并且在本生命周期一直有效
							//获取用户角色																					
							that.roleAPI();
							var status = '';
							that.getNurseList(status);
							uni.request({
								url: 'https://test134.vrapp.chot.cn/api', //服务器端地址
								data: {
									operate: "MemberCenter.update",
									token: that.token,
									nickname: that.nickName,
									headimg: that.avatarUrl
								},
								method: 'POST',
								header: {
									'content-type': 'application/json'
								},
								success: (res) => {
									console.log("向后台更新信息");
									console.log(res);

								},
							});


						})



					},
					fail: res => {
						uni.showToast({
							title: '获取微信信息失败',
							duration: 2000,
							icon: "none"
						})
					}
				})
			},
			// 再次购买
			buyAgin(index) {
				let goods_id = this.queryList[index].goods_id;
				uni.navigateTo({
					url: "../../pagesB/makedetail/makedetail?id=" + goods_id
				})
			},
			// 续费
			renewal(index) {
				let list = this.queryList[index];
				console.log('liebiao', list);
				let goods_id = list.goods_id;
				let nurse_id;
				let nurse_name;
				for (let i = 0; i < list.nurse.length; i++) {
					nurse_id = list.nurse[i].nurse_id;
					nurse_name = list.nurse[i].name;
				}
				let caregivers_name = list.name;
				let goods_spec = list.goods_spec;
				let caregivers_id = list.caregivers_id;
				let start_time = list.end_time;
				let order_no = list.order_no
				uni.navigateTo({
					url: "../../pagesB/renewal_order/renewal_order?goods_id=" + goods_id + "&nurse_id=" + nurse_id + "&goods_spec=" +
						goods_spec + "&caregivers_id=" + caregivers_id + "&start_time=" + start_time + "&nurse_name=" + nurse_name +
						"&caregivers_name=" + caregivers_name + "&order_no=" + order_no
				})
			},
			confirmTap(index) {
				let _this = this;
				uni.showModal({
					content: '是否确认护理？',
					success: function(res) {
						if (res.confirm) {
							console.log('确认护理');
							_this.confirmResAPI(index);

						} else if (res.cancel) {
							uni.showToast({
								title: "取消确认",
								icon: "none"
							});
						}
					}
				});
			},
			async roleAPI() {
				const res = await this.$myRequset({
					url: "/api",
					method: "POST",
					data: {
						operate: "MemberCenter.member_bing",
						token: this.token,
					}
				})
				let arrType = res.data.data.list;
				console.log("arrType")
				console.log(arrType)
				arrType.forEach((item, index) => {
					if (item.type == 1) {
						this.orderShow = true;
						return false;
					}

				})


				if (arrType == []) {

					let arrMember = res.data.data.member;
					arrMember.forEach((item, index) => {
						if (item.role == 1 || item.role == 2 || item.role == 3) {
							this.orderShow = false;
							return false;
						}
					})
				}



			}, //确认护理事件
			async confirmResAPI(index) {
				const res = await this.$myRequset({
					url: "/api",
					method: "POST",
					data: {
						operate: "Member.AppointOrder.up_status",
						token: this.token,
						order_no: this.queryList[index].order_no
					}
				})
				console.log(res)
				this.queryList = [];
				this.getNurseList(app.globalData.orderStatus);
			},
			navsHandleClick(i) {
				this.current = i;
			},
			intervalChange(e) {
				this.current = e.detail.current;
			},
			changeFn(index) {
				this.add_class = index;
				if (this.add_class == 0) {
					var status = '';
					this.getNurseList(status);
				} else if (this.add_class == 1) {
					uni.navigateTo({
						url: "../../pagesB/order/order"
					})
				}
			},
			//切换选项卡
			toggleTab(index) {
				this.tabIndex = index;
				this.page = 1;
				this.status = 'loading';
				this.isEmpty = false;
				switch (this.tabIndex) {
					case 1:
						var status = 3 // 待护理
						this.queryList = [];
						this.getNurseList(status);
						break;
					case 2:
						var status = 4 // 正在护理
						this.queryList = [];
						this.getNurseList(status);
						break;
					case 3:
						var status = 5 // 已完成
						this.queryList = [];
						this.getNurseList(status);
						break;
					default:
						var status = "" // 默认显示全部
						this.getNurseList(status);
						break;
				}
			},
			//滑动切换swiper
			tabChange(e) {
				this.tabIndex = e.detail.current;
			},
			// 支付订单
			async pay_order(index) {
				var _this = this;
				let order_no = _this.queryList[index].order_no;
				//console.log('订单号',order_no);
				const res = await _this.$myRequset({
					url: "/api",
					method: "POST",
					data: {
						token: _this.token,
						operate: "member.pay.wx_jsapi",
						order_no: order_no
					},
					header: {
						'content-type': 'application/form',
					}
				});
				if (res.data.code == 1) {
					let param = res.data.data;
					uni.requestPayment({
						provider: 'wxpay',
						timeStamp: param.timeStamp,
						nonceStr: param.nonceStr,
						package: param.package,
						signType: param.signType,
						paySign: param.paySign,
						success: function(res) {
							uni.showToast({
								title: "支付成功",
								duration: 2000,
								icon: "loading"
							});
							_this.page = 1;
							var status = '';
							_this.getNurseList(status);


						},
						fail: function(err) {
							console.log('fail:' + JSON.stringify(err));
							uni.showToast({
								title: "取消支付",
								icon: "loading"
							});
						}
					});
				}
			},
			detail_all(index) {
				let nurse = {};
				this.queryList[index].nurse.forEach((val) => {
					nurse = val;
				});
				let order_no = this.queryList[index].order_no;
				let caregivers_id = this.queryList[index].caregivers_id;
				let nurse_id = nurse.nurse_id;
				let appoint_id = nurse.id;
				let appointment_id = this.queryList[index].appointment_id;
				let status = this.queryList[index].status;
				let unit = this.queryList[index].unit;
				uni.navigateTo({
					url: "../workerAllDetail/workerAllDetail?order_no=" + order_no + "&caregivers_id=" + caregivers_id +
						"&nurse_id=" +
						nurse_id + "&appoint_id=" + appoint_id + "&appointment_id=" + appointment_id + "&order_status=" + status +
						"&unit=" + unit
				})
			},
			callPhone(index) {
				this.queryList[index].nurse.forEach((val) => {
					uni.makePhoneCall({
						phoneNumber: val.tel
					});
				});

			},
			async getNurseList(status) {
				const res = await this.$myRequset({
					url: "/api",
					method: "POST",
					data: {
						operate: "Member.AppointOrder.index",
						token: this.token,
						status: status,
						page: this.page
					},
					header: {
						'content-type': 'application/form'
					}
				});
				console.log('页码', this.page);
				// this.queryList = res.data.data.list.list;
				console.log('changdu', res.data.data.list.list.length);
				this.queryList = [];
				for (var i = 0; i < res.data.data.list.list.length; i++) {
					console.log('循环次数', i)
					this.queryList.push(res.data.data.list.list[i]); // 加载的数据追加在上一页后面										
				}
				console.log('this.queryList', this.queryList);
				this.queryList.forEach((item, index) => {
					if (item.status == 0) {
						item.status = "已取消";
					} else if (item.status == 1) {
						item.status = "待支付";
					} else if (item.status == 2) {
						item.status = "待支付";
					} else if (item.status == 3) {
						item.status = "待护理";
					} else if (item.status == 4) {
						item.status = "正在护理";
					} else if (item.status == 5) {
						item.status = "已完成";
					}
					if (item.name == null) {
						item.name = ""
					}
					item.nurse.forEach((val) => {
						if (val.introduce == "") {
							val.introduce = "暂无简介";
						}
					});

				});
				this.list_count = res.data.data.list.count;
				if (this.list_count !== 0) {
					this.status = "more";
					this.isEmpty = false;
					this.contentText.contentnomore = "没有更多数据啦"
				} else {
					this.status = "nomore";
					this.isEmpty = true;
					this.contentText.contentnomore = "您暂时没有相关订单哦"
				}
				let pages = Math.ceil(this.list_count / this.pageSize);
				if (this.page == pages) {
					this.status = "nomore";
				}
				//uni.clearStorage();
			},
			// LoadMoreList(list){
			// 	for (var i = 0; i < list.length; i++) {
			// 		console.log('循环次数', i)
			// 		this.queryList.push(list[i]); // 加载的数据追加在上一页后面										
			// 	}
			// }
		}
	}
</script>

<style scoped lang="scss">
	.box_fixed {
		position: fixed;
		width: 100%;
		z-index: 1;
		height: 116rpx;
		background-color: #fff;
	}

	.form_btn {
		width: 80%;
		text-align: center;
		margin: 40rpx auto;
		padding-bottom: 40rpx;
	}


	.form_btn button {
		height: 80rpx;
		border-radius: 40rpx;
		color: white;
		line-height: 80rpx;
		background: linear-gradient(to right, #63cce7, #66ebdf);
		box-shadow: 0 8rpx 26rpx 0 #2fcece;
	}

	.container {
		background: #f9f9f9;
		height: 100%;
	}

	.auth_text {
		color: #484848;
		text-align: center;
	}

	.auth-img {
		width: 541rpx;
		height: 387rpx;
		margin: 60rpx auto 20rpx;
		display: block;
	}

	.content {
		background: #fefefe;
		padding: 20rpx 0;

		.item {
			width: 86%;
			margin: 26rpx auto;
			background: #fff;
			box-shadow: 0rpx 0rpx 6rpx 6rpx #e5e5e5;
			border-radius: 20rpx;
			padding: 27rpx;

			.item_title {
				background-color: rgba(100, 204, 232, .1);
				padding: 10rpx;
				color: $uni-color-theme;
				border-radius: 50%;
				margin-left: 10rpx;
			}
		}

		.statusText {
			position: absolute;
			top: -46rpx;
			right: -34rpx;
			display: inline-block;
			width: 122rpx;
			height: 40rpx;
			z-index: 0;
			line-height: 40rpx;
			color: #fff;
			text-align: center;


		}

		.order_img {
			display: flex;
			align-items: center;
			justify-content: center;

			image {
				width: 150rpx;
				height: 150rpx;
				padding: 80rpx 80rpx 20rpx;
			}
		}

		.orderid {
			position: relative;
			padding-bottom: 27rpx;
			border-bottom: 2px solid #e5e5e5;
			display: flex;
			align-items: center;
			justify-content: center;

			.title {
				font-size: 28rpx;
				color: #000000;
				font-weight: normal;
				flex: 2;

				text {
					font-weight: bold;
				}
			}

			.sucessImg {
				width: 135rpx;
				height: 57rpx;
				position: absolute;
				top: -46rpx;
				right: -34rpx;
			}
		}

		.active {
			color: #2FCECE !important;
			border-color: #2FCECE !important;
		}

		.info {
			padding-top: 25rpx;

			.item_name {
				flex: .8;
				overflow: hidden;
				text-overflow: ellipsis;
				white-space: nowrap;
			}

			.font_item {
				text {
					color: #000000;
					font-weight: normal;
				}
			}

			.introduce {
				word-break: break-all;
				text-overflow: ellipsis;
				display: -webkit-box;
				-webkit-box-orient: vertical;
				-webkit-line-clamp: 2;
				overflow: hidden;
				text-align: justify;
			}

			.work_item {
				padding: 0;
				display: flex;
				align-items: center;

				.phone_img {
					width: 21rpx;
					height: 21rpx;
					margin-left: 10rpx;
				}

				.major_text {
					color: #000;
					font-weight: bold;
				}

				.phone {
					color: #737373;
				}

				.sub_text {
					color: #9e9e9e;
					font-size: 24rpx;
				}
			}
		}
	}

	.pay_btn {
		padding-top: 20rpx;
		text-align: right;

		.payNow {
			display: inline-block;
			margin-left: 20rpx;
			background: #fff;
			color: #5b5a5a;
			font-size: 24rpx;
			border: 2px solid #f4f4f4;
			border-radius: 40rpx;

			&::after {
				border: none;
			}
		}

		.active {
			border-color: #d8d8d8;
			color: #000;
		}
	}



	.change {
		float: left;
		padding-left: 20rpx;
	}

	.change_img {
		width: 40rpx;
		height: 30rpx;
		vertical-align: middle;
		padding-top: 24rpx
	}

	.horizonal-tab {
		background: #fff;
		text-align: center;
		border-bottom: 1px solid #eee;
	}

	.horizonal-tab .active {
		color: #23c0ba;
	}

	.scroll-tab {
		white-space: nowrap;
		/* 必要，导航栏才能横向*/
		border-bottom: 1rpx solid #eee;
		text-align: center;
		position: fixed;
		left: 0;
		z-index: 1;
		background-color: #fff;
	}

	.scroll-tab-item {
		display: inline-block;
		/* 必要，导航栏才能横向*/
		width: 20%;
		text-align: center;
		padding-top: 20rpx;
	}

	.active .scroll-tab-line {
		background: #23c0ba;
		width: 90rpx;
		height: 5rpx;
		margin: 0 auto;
	}

	.demo {
		display: flex;
		align-items: center;
		justify-content: center;
		background: #23c0ba;
		font-size: 26rpx;
		width: 100%;
		text-align: center;
		position: fixed;
		top: 0;
		z-index: 999;

		.left {
			float: left;
			position: absolute;
			width: max-content;
			height: max-content;
			top: 0;
			bottom: 0;
			left: 20rpx;
			margin: auto;
		}

		.clr_fff {
			color: #fff;
			font-size: 35rpx;
		}

		.top_title {
			color: #fff;
			font-size: 34rpx;
		}
	}

	.btn {
		text-align: right;
		padding-top: 20rpx;
		position: relative;

		.btn_pj {
			background: #23c0ba;
			border: none;
			color: #fff;
			font-size: 26rpx;
			width: 150rpx;
			height: 47rpx;
			line-height: 47rpx;
			padding: 0 10rpx;
			display: inline-block;
			position: absolute;
			top: -10rpx;
			right: 0;
			margin-bottom: 10rpx;

			&::after {
				border: none;
			}

			&.verify_btn {
				width: 126rpx;
				background: rgba(100, 204, 232, .1);
				color: $uni-color-theme;
				margin-right: 20rpx;
			}
		}

		.btn_change {
			background: #fff;
			border: 1px solid #4f4f4f;
			color: #4f4f4f;
			font-size: 26rpx;
			width: 106rpx;
			height: 47rpx;
			line-height: 45rpx;
			padding: 0;
			display: inline-block;
			margin-left: 20rpx;

			&:after {
				border: none;
			}
		}
	}

	.pd_t123 {
		padding-top: 123rpx;
	}

	.content_change {
		width: 100%;
		padding: 20rpx 0 0;

		.operate_box {
			width: 80%;
			margin: 0 auto;
			// padding-top: 120rpx;

			.operate_btn {
				width: 50%;
				height: 70rpx;
				line-height: 70rpx;
				font-size: 30rpx;
				display: inline-block;
				text-align: center;
				color: #23c0ba;
				border: 2px solid #23c0ba;

				&::after {
					border: none;
				}

				&:first-child {
					border-right: 0;
					border-radius: 10rpx 0 0 10rpx;
				}

				&:last-child {
					border-radius: 0 10rpx 10rpx 0;
				}

				&.active {
					background-color: #23c0ba;
					color: #fff;
				}
			}
		}
	}
</style>
