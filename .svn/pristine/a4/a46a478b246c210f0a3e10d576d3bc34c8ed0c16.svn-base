<template>
	<view class="">
		<view class="demo" :style="'height:' +  demo.height + 'px;' + 'padding-top:' + demo.top + 'px;padding-bottom:10rpx'">
			<view class="left" :style="'top:' + demo.top + 'px'">
				<view class="iconfont icon-zuo" @tap='backleft'></view>
			</view>
			<view class="top_title">被护理人员选择</view>
		</view>
		<scroll-view scroll-y="true" class="listItems scroll-Y">
			<view v-show="isEmpty == true">
				<view class="order_img">
					<image src="https://test134.vrapp.chot.cn/mini/picture/nurse_no.png" mode="widthFix"></image>
				</view>
				<view class="no_text">还没有护理人呢，快来添加吧！</view>
			</view>
			<radio-group @change="radioChange">
				<view class="uni-flex listItem" v-for="(item,index) in list" :key="item.id">
					<view class="nurse_list">
						<view class="list_top">
							<view class="list_text">{{ item.name }}
								<radio class="nurseRadio" color="#00c4bc" :value="item.id" :checked="index === current" />
								<!-- <image class="level_img" src="https://test134.vrapp.chot.cn/mini/picture/nurse01.png"> -->
							</view>
						</view>
						<view class="list_content">
							<view class="list_item first">
								<view class="list_item_label">性别:<span>{{ item.sex }}</span></view>
								<view class="list_item_label">年龄:<span>{{ item.age }}岁</span></view>
							</view>
							<view class="list_item" @tap="callPhone(index)" open-type="callPhone">
								<view class="list_item_label">手机: <span>{{ item.phone }}</span>
									<image class="phone_img" src="https://test134.vrapp.chot.cn/mini/picture/phone.png" />
								</view>
							</view>
							<view class="list_item">
								<view class="list_item_label">地址: <span>{{ item.address }}</span></view>
							</view>
						</view>
					</view>



				</view>

			</radio-group>
		</scroll-view>

		<view class="form_btn" :class="[isEmpty_nurse ? 'show':'hide']">
			<button type="default" class="order_btn" @tap="caregiversTap">确认下单</button>
		</view>

		<view class="form_btn">
			<!-- <button type="default" class="receive_btn" @tap="addNurse">+</button> -->
			<button type="default" class="order_btn" @tap="addNurse">添加被护理人资料</button>
		</view>
	</view>
</template>

<script>
	import app from "../../App.vue"
	export default {
		data() {
			return {
				mid: "",
				demo: {
					top: 0,
					height: 0
				},
				list: [],
				caregivers_id: "",
				rule: "",
				nurse_id: "",
				start_time: "",
				item_id: null,
				from_mid: "",
				isEmpty: false,
				isEmpty_nurse: false

			}
		},
		onLoad(option) {

			this.list = [];
			this.getList();
			console.log(option)
			this.token = option.token
			this.start_time = option.start_time
			this.nurse_id = option.nurse_id
			this.rule = option.rule
			console.log("from_mid")
			console.log(this.from_mid)
		},
		onShow() {
			this.list = [];
			this.getList();
		},

		created() {
			const demo = uni.getMenuButtonBoundingClientRect()
			this.demo.top = demo.top
			this.demo.height = demo.height
			if (app.globalData.mid == undefined) {
				this.mid = uni.getStorageSync('mid');
			} else {
				this.mid = app.globalData.mid;
			}
			if (uni.getStorageSync('from_mid') == '') {
				this.from_mid = 0;
			} else {
				this.from_mid = uni.getStorageSync('from_mid');
			}
		},
		methods: {
			addNurse() {
				uni.navigateTo({
					url: "../nurse/nurse?isChoose=" + true
				});
			},
			async getList() {
				let res = await this.$myRequset({
					url: '/api',
					method: 'POST',
					data: {
						operate: 'Caregivers.index',
						mid: this.mid
					},
					header: {
						'content-type': 'application/form',
					}
				});
				this.list = res.data.data.list;
				if (this.list.length == 0) {
					this.isEmpty = true;
					this.isEmpty_nurse = false;
				} else {
					this.isEmpty = false;
					this.isEmpty_nurse = true;
				}

			},
			backleft(e) {
				uni.navigateBack();
			},
			radioChange(e) {
				this.caregivers_id = e.detail.value

				console.log(e.detail.value)
			},
			callPhone(index) {
				uni.makePhoneCall({
					phoneNumber: this.list[index].phone
				})
			},
			caregiversTap(e) {
				if (this.caregivers_id == "") {
					uni.showToast({
						title: '请选择被护理人员',
						duration: 2000,
						icon: "none"
					})
				} else {
					let orderParam = {
						operate: "member.order.set",
						token: this.token,
						rule: this.rule,
						from_mid: this.from_mid,
						order_type: 2,
						nurse_id: this.nurse_id,
						caregivers_id: this.caregivers_id,
						start_time: this.start_time
					}
					uni.request({
						url: 'https://test134.vrapp.chot.cn/store/api.member.order/set.html',
						data: orderParam,
						method: 'POST',
						success: (res) => {
							console.log(res)
							if (res.data.code == 1) {

								var order_no = res.data.data.order.order_no
								uni.request({
									url: "https://test134.vrapp.chot.cn/api/",
									data: {
										operate: "member.pay.wx_jsapi",
										token: this.token,
										order_no: order_no
									},
									method: 'POST',
									success: (res) => {
										console.log(res)

										var signType = res.data.data.signType
										var nonceStr = res.data.data.nonceStr;
										let _package = res.data.data.package;
										var paySign = res.data.data.paySign
										var signType = res.data.data.signType
										var timeStamp = res.data.data.timeStamp

										uni.requestPayment({
											provider: 'wxpay',
											timeStamp: timeStamp,
											nonceStr: nonceStr,
											package: _package,
											signType: signType,
											paySign: paySign,
											success: function(res) {
												console.log('success:' + JSON.stringify(res));
												uni.switchTab({
													url: "../worker/worker",
													success: (res) => {
														let data = {
															tabIndex: 0
														}
														let page = getCurrentPages().pop();
														if (page == undefined || page == null) return;
														page.onLoad(data);
													}
												});
											},
											fail: function(err) {
												console.log('fail:' + JSON.stringify(err));
												uni.switchTab({
													url: "../worker/worker",
													success: (res) => {
														let data = {
															tabIndex: 0
														}
														let page = getCurrentPages().pop();
														if (page == undefined || page == null) return;
														page.onLoad(data);
													}
												});
											}
										});
									}
								})



							} else {
								uni.showToast({
									title: res.data.info,
									duration: 3000,
									icon: "none"
								});

							}

						}
					})

				}



			}
		}
	}
</script>

<style lang="scss" scoped>
	.nurseRadio {
		float: right;
	}

	.demo {
		position: relative;
		display: flex;
		align-items: center;
		justify-content: center;
		background: #23c0ba;
		font-size: 26rpx;
		width: 100%;
		text-align: center;
		top: 0;
		z-index: 999;

		.left {
			float: left;
			position: absolute;
			width: max-content;
			height: max-content;
			top: 0;
			bottom: 0;
			left: 20rpx;
			margin: auto;

		}

		.top_title {
			font-size: 34rpx;
			color: #fff;
		}
	}

	.listItem {
		width: 86%;
		margin: 15px auto;
		background: #fff;
		box-shadow: 0 8rpx 26rpx 0 #dedede;
		border-radius: 10px;
		padding: 20rpx;
	}

	.order_img {
		display: flex;
		align-items: center;
		justify-content: center;

		image {
			width: 200rpx;
			height: 200rpx;
			padding: 80rpx 80rpx 20rpx;
		}
	}

	.no_text {
		text-align: center;
		margin: 10rpx auto;
		color: #999999;
		font-size: 26rpx;
	}

	.nurse_list {
		width: 100%;

		.list_item {
			.phone_img {
				width: 21rpx;
				height: 21rpx;
				margin-left: 10rpx;
			}

			.list_item_label {
				font-weight: bolder;
			}

			span {
				margin-left: 10rpx;
				color: #969696;
			}
		}

	}

	.first {
		display: flex;
	}

	.first .list_item_label {
		flex: 2;
	}

	.list_top {
		padding: 0 20rpx 12rpx;
		border-bottom: 1px solid #f4f4f4;
		position: relative;

		.list_text {
			font-size: 34rpx;
			font-weight: 600;
		}
	}

	.list_content {
		padding: 20rpx 20rpx 10rpx;
	}

	.level_img {
		width: 135rpx;
		height: 47rpx;
		position: absolute;
		right: -34rpx;
		bottom: 20rpx;
	}

	.form_btn {
		width: 80%;
		text-align: center;
		margin: 40rpx auto;
		padding-bottom: 40rpx;

		.receive_btn {
			height: 80rpx;
			color: white;
			line-height: 72rpx;
			font-size: 70rpx;
			background: rgba(203, 203, 203, .5);
			border: 1px solid rgba(203, 203, 203, 0);
		}

		.receive_btn::after {
			border: none;
		}

		.order_btn {
			height: 80rpx;
			border-radius: 40rpx;
			color: white;
			line-height: 80rpx;
			background: linear-gradient(to right, #63cce7, #66ebdf);
			box-shadow: 0 8rpx 26rpx 0 #2fcece;
		}

		.order_btn::after {
			border: none;
		}
	}

	.makehlr_btn {
		margin-top: 20rpx;
		text-align: center;
	}

	.makehlr_btn button {
		background: #00c4bc;
		color: #fff;
		border: 1px solid #00c4bc;
		display: inline-block;
		margin-left: 5%;
		padding: 1rpx 10rpx;
		font-size: 24rpx;
	}
</style>
