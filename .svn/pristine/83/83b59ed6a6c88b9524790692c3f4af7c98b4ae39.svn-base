<template>
	<view class="container prohibition">
		<view class="demo" :style="'height:' +  demo.height + 'px;' + 'padding-top:' + demo.top + 'px;padding-bottom:10rpx'">
			<view class="left" :style="'top:' + demo.top + 'px'">
				<navigator url="../my/my" open-type="switchTab">
					<view class="iconfont icon-zuo"></view>
				</navigator>
			</view>
			<view class="top_title">我的护工</view>
		</view>
		<view class="pd_t123">

			<!-- 顶部导航栏 -->
			<view class="horizonal-tab">
				<scroll-view scroll-x="true" scroll-with-animation class="scroll-tab" :style="{ top: top_val + 'rpx'}">
					<block v-for="(item,index) in tabBars" :key="index">
						<view class="scroll-tab-item" :class="{'active': tabIndex==index}" @tap="toggleTab(index)">
							{{item.name}}
							<view class="scroll-tab-line"></view>
						</view>
					</block>
				</scroll-view>
			</view>

			<!-- 内容区 -->
			<view class="">
				<!-- 滑块视图 -->
				<view class="content" :style="{ 'margin-top': margin_top + 'rpx'}">
					<view class="items">
						<view class="order_img">
							<image src="https://test134.vrapp.chot.cn/mini/picture/list_none.png" mode="widthFix" v-show="isEmpty == true"></image>
						</view>
						<view class="item" v-for="(items,index1) in queryList" :key="index1" @tap="work_detail(item1,index1)">
							<view class="orderid">
								<view class="title">被护理人：<text>{{items.name}}</text></view>
								<view class="flex_layout">
									<text class="flex_first">服务项目：<text class="item_title">{{ items.goods_title }}</text></text>
									<text class="flex_first">电话：<text>{{ items.phone }}</text></text>
								</view>
								<image class="sucessImg" src="https://test134.vrapp.chot.cn/mini/picture/135_57.png" mode="widthFix"></image>
								<text class="statusText">{{items.status}}</text>
							</view>
							<view class="info">
								<view v-for="(item1,index2) in items.nurse" :key="index2">
									<view class="uni-flex work_item">
										<text class="item_name font_item">护工：<text class="major_text">{{ item1.name }}</text></text>
										<text class="item_name font_item">年龄：<text>{{ item1.age }}岁</text></text>
									</view>
									<view class="uni-flex work_item">
										<view class="font_item" @click.stop="callPhone(index1)">电话：<text class="major_text phone">{{ item1.tel }}</text>
											<image class="phone_img" src="https://test134.vrapp.chot.cn/mini/picture/phone.png" />
										</view>
									</view>
									<view class="uni-flex work_item">
										<text class="font_item introduce">护工简介：<text class="sub_text">{{ item1.introduce }}</text></text>
									</view>
								</view>
							</view>
						</view>
					</view>
				</view>
				<uni-load-more :status="status" :content-text="contentText" />
			</view>
		</view>
	</view>
</template>

<script>
	import app from "../../App.vue"
	import uniLoadMore from '../../components/uni-load-more/uni-load-more.vue';
	const mid = uni.getStorageSync('mid');
	export default {
		components: {
			uniLoadMore
		},
		data() {
			return {
				tabIndex: 0,
				/* 选中标签栏的序列,默认显示第一个 */
				page: 1,
				pageSize: 10,
				hidden: false,
				isEmpty: false,
				list_count: 0,
				status: 'loading',
				contentText: {
					contentdown: '上拉加载更多',
					contentrefresh: '加载中.....',
					contentnomore: '没有更多数据啦'
				},
				tabBars: [{
						name: '全部护工'
					},
					{
						name: '正在护理'
					},
					{
						name: '已完成'
					}

				],
				top_val: 0, //top值
				margin_top: 0,
				demo: {
					top: 0,
					height: 0
				},
				data: {},
				queryList: [],
				statusText: '',
				token: '',
				nurse_id: null
			}
		},
		onLoad() {
			var status = '';
			this.getNurseList(status);
			let mobile_phone = uni.getSystemInfoSync(); // 手机信息
			if (mobile_phone.safeArea.bottom <= 320) { //、 iphone5
				this.top_val = (this.demo.height + this.demo.top) * 2 + 13;
				this.margin_top = this.demo.height + this.demo.top;
			} else if (mobile_phone.safeArea.bottom >= 812) { // iphone XR
				this.top_val = (this.demo.height + this.demo.top) * 2 - 8;
				this.margin_top = this.demo.height + this.demo.top;
			} else {
				this.top_val = (this.demo.height + this.demo.top) * 2;
				this.margin_top = this.demo.height + this.demo.top;
			}
		},
		created() {
			const demo = uni.getMenuButtonBoundingClientRect()
			this.demo.top = demo.top
			this.demo.height = demo.height
			if (app.globalData.token == "") {
				this.token = uni.getStorageSync('token');
			} else {
				this.token = app.globalData.token;
			}
		},
		onShow() {
			this.tabIndex = 0;
		},
		onReachBottom(e) {
			this.page++;
			if (this.tabIndex == 0) {
				var status = '';
				this.getNurseListMore(status);
			} else if (this.tabIndex == 1) {
				var status = 3;
				this.statusText = "护理中";
				this.getNurseListMore(status);
			} else if (this.tabIndex == 2) {
				var status = 5; // 预约成功
				this.statusText = "已完成";
				this.getNurseListMore(status);
			}

		},
		methods: {
			backleft(e) {
				uni.navigateBack();
			},
			navsHandleClick(i) {
				this.current = i;
			},
			intervalChange(e) {
				this.current = e.detail.current;
			},
			//切换选项卡
			toggleTab(index) {
				this.tabIndex = index;
				this.page = 1;
				this.isEmpty = false;
				this.status = "loading";
				if (this.tabIndex == 1) {
					this.hidden = true;
				} else {
					this.hidden = false;
				}
				switch (this.tabIndex) {
					case 1:
						var status = 4 // 正在护理
						this.getNurseList(status);
						break;
					case 2:
						var status = 5 // 已完成
						this.getNurseList(status);
						break;
					default:
						var status = '' // 默认显示全部列表
						this.getNurseList(status);
						break;
				}
			},
			//滑动切换swiper
			tabChange(e) {
				this.tabIndex = e.detail.current;
			},
			add_server() {
				uni.navigateTo({
					url: "../serverItem/serverItem"
				})
			},
			work_detail(item, index) {
				let nurse = {}
				this.queryList[index].nurse.forEach((val) => {
					nurse = val;
				});
				let order_no = this.queryList[index].order_no;
				let caregivers_id = this.queryList[index].caregivers_id;
				let nurse_id = nurse.nurse_id;
				let appoint_id = nurse.id;
				let appointment_id = this.queryList[index].appointment_id; // 预约订单id: 护工更换需要
				let unit = this.queryList[index].unit;
				let status = this.queryList[index].status;
				uni.navigateTo({
					url: "../workerDetail/workerDetail?order_no=" + order_no + "&caregivers_id=" + caregivers_id + "&nurse_id=" +
						nurse_id + "&appoint_id=" + appoint_id + "&appointment_id=" + appointment_id + "&unit=" + unit + "&status=" +
						status
				})
			},
			callPhone(index) {
				this.queryList[index].nurse.forEach((val) => {
					uni.makePhoneCall({
						phoneNumber: val.tel
					});
				});

			},
			// 获取当前系统时间
			getTimer() {
				var date = new Date(),
					year = date.getFullYear(),
					month = date.getMonth() + 1,
					day = date.getDate(),
					hour = date.getHours() < 10 ? "0" + date.getHours() : date.getHours(),
					minute = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes(),
					second = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();
				month >= 1 && month <= 9 ? (month = "0" + month) : "";
				day >= 0 && day <= 9 ? (day = "0" + day) : "";
				var timer = year + '/' + month + '/' + day + ' ' + hour + ':' + minute + ':' + second;
				return timer;
			},
			async getNurseList(status) {
				const res = await this.$myRequset({
					url: "/api",
					method: "POST",
					data: {
						operate: "Member.AppointOrder.index",
						token: this.token,
						status: status,
						page: this.page
					},
					header: {
						'content-type': 'application/form'
					}
				});
				this.queryList = res.data.data.list.list;
				let now = new Date(this.getTimer());
				console.log('now', now.getTime() / 1000);
				this.queryList.forEach((item, index) => {
					if(item.pay_expire_time !== null && item.status == 2 ){
						if((now.getTime() / 1000) >= item.pay_expire_time){
							item.status = 0; // 过期未付款订单【交易关闭】
						}
					}
					if (item.status == 0) {
						item.status = "已取消";
					} else if (item.status == 1) {
						item.status = "待支付";
					} else if (item.status == 2) {
						item.status = "待支付";
					} else if (item.status == 3) {
						item.status = "已付款";
					} else if (item.status == 4) {
						item.status = "正在护理";
					} else if (item.status == 5) {
						item.status = "已完成";
					}
					if (item.name == null) {
						item.name = ""
					}
					item.nurse.forEach((val) => {
						if (val.introduce == "") {
							val.introduce = "暂无简介";
						}
					});
				});
				if (!this.queryList) {
					this.status = "more";
				} else {
					this.status = "nomore";
				}
				this.list_count = res.data.data.list.count;
				if (this.list_count !== 0) {
					this.status = "more";
					this.isEmpty = false;
					this.contentText.contentnomore = "没有更多数据啦"
				} else {
					this.status = "nomore";
					this.isEmpty = true;
					this.contentText.contentnomore = "您暂时没有相关订单哦"
				}
				let pages = Math.ceil(res.data.data.list.count / this.pageSize);
				if (this.page == pages) {
					this.status = "nomore";
				}
				uni.clearStorage();
			},
			async getNurseListMore(status) {
				let data = {
					operate: 'Member.AppointOrder.index',
					token: this.token,
					page: this.page,
					status: status
				}
				const res = await this.$myRequset({
					url: '/api',
					method: "POST",
					data: data
				})
				for (var i = 0; i < res.data.data.list.list.length; i++) {
					this.queryList.push(res.data.data.list.list[i]); // 加载的数据追加在上一页后面										
				}
				this.queryList.forEach((item, index) => {
					//console.log(item.status)  
					if (item.status == 0) {
						item.status = "已取消";
					} else if (item.status == 1) {
						item.status = "待支付";
					} else if (item.status == 2) {
						item.status = "待支付";
					} else if (item.status == 3) {
						item.status = "已付款";
					} else if (item.status == 4) {
						item.status = "正在护理";
					} else if (item.status == 5) {
						item.status = "已完成";
					}
					if (item.name == null) {
						item.name = ""
					}
					item.nurse.forEach((val) => {
						if (val.introduce == "") {
							val.introduce = "暂无简介";
						}
					});
				});
				let pages = Math.ceil(res.data.data.list.count / this.pageSize);
				if (this.page == pages) {
					this.status = "nomore";
				}
				uni.clearStorage();
			}
		}
	}
</script>
<style>
	page {
		background-color: #fff;
	}
</style>
<style scoped lang="scss">
	.content {
		background: #fefefe;
		padding: 20rpx 0;

		.item {
			width: 86%;
			margin: 26rpx auto;
			background: #fff;
			box-shadow: 0rpx 0rpx 6rpx 6rpx #e5e5e5;
			border-radius: 20rpx;
			padding: 27rpx;

			.item_title {
				color: #9ee9e6;
			}
		}

		.statusText {
			position: absolute;
			top: 0rpx;
			right: -34rpx;
			display: inline-block;
			width: 122rpx;
			height: 40rpx;
			z-index: 99;
			line-height: 40rpx;
			color: #fff;
			text-align: center;
		}

		.order_img {
			display: flex;
			align-items: center;
			justify-content: center;

			image {
				width: 150rpx;
				height: 150rpx;
				padding: 80rpx 80rpx 20rpx;
			}
		}

		.orderid {
			position: relative;
			padding-bottom: 27rpx;
			border-bottom: 2px solid #e5e5e5;

			.title {
				font-size: 28rpx;
				color: #000000;
				font-weight: normal;
				flex: 2;

				text {
					font-weight: bold;
				}
			}

			.contect {
				color: #737373;
			}

			.sucessImg {
				width: 135rpx;
				height: 57rpx;
				position: absolute;
				top: 0;
				right: -34rpx;
			}

			.flex_layout {
				display: flex;
				align-items: center;
				justify-content: center;

				.flex_first {
					flex: .8;
				}
			}

			.add_server {
				font-size: 26rpx;
				padding: 0 10rpx;
				margin-left: 100rpx;
				color: #000;
				background-color: transparent;
				border: 1px solid #c1c1c1;
				height: 56rpx;
				line-height: 56rpx;

				&:after {
					border: none;
				}
			}
		}

		.active {
			color: #2FCECE !important;
			border-color: #2FCECE !important;
		}

		.info {
			padding-top: 25rpx;

			.item_name {
				flex: .8;
				overflow: hidden;
				text-overflow: ellipsis;
				white-space: nowrap;
			}

			.font_item {
				font-size: 28rpx;

				text {
					color: #000000;
					font-weight: normal;
				}
			}

			.introduce {
				word-break: break-all;
				text-overflow: ellipsis;
				display: -webkit-box;
				-webkit-box-orient: vertical;
				-webkit-line-clamp: 2;
				overflow: hidden;
				text-align: justify;
			}

			.work_item {
				padding: 0;
				display: flex;
				align-items: center;

				.phone_img {
					width: 21rpx;
					height: 21rpx;
					margin-left: 10rpx;
				}

				.major_text {
					color: #000;
					font-weight: bold;
				}

				.phone {
					color: #737373;
				}

				.sub_text {
					color: #9e9e9e;
					font-size: 24rpx;
				}
			}
		}
	}

	.horizonal-tab {
		background: #fff;
	}

	.horizonal-tab .active {
		color: #23c0ba;
	}

	.scroll-tab {
		white-space: nowrap;
		/* 必要，导航栏才能横向*/
		border-bottom: 1rpx solid #eee;
		text-align: center;
		position: fixed;
		left: 0;
		z-index: 1;
		background-color: #fff;
	}

	.scroll-tab-item {
		display: inline-block;
		/* 必要，导航栏才能横向*/
		width: 25%;
		text-align: center;
		padding-top: 20rpx;
	}

	.active .scroll-tab-line {
		background: #23c0ba;
		width: 90rpx;
		height: 5rpx;
		margin: 0 auto;
	}

	.demo {
		display: flex;
		align-items: center;
		justify-content: center;
		background: #23c0ba;
		font-size: 26rpx;
		width: 100%;
		text-align: center;
		position: fixed;
		top: 0;
		z-index: 999;

		.left {
			float: left;
			position: absolute;
			width: max-content;
			height: max-content;
			top: 0;
			bottom: 0;
			left: 20rpx;
			margin: auto;
		}

		.clr_fff {
			color: #fff;
			font-size: 35rpx;
		}

		.top_title {
			color: #fff;
			font-size: 34rpx;
		}
	}

	.pd_t123 {
		padding-top: 123rpx;
	}
</style>
